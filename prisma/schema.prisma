datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  password      String
  favorites     Favorite[]      // Relasi ke tabel Favorite
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Fragrance {
  id            Int     @id @default(autoincrement())
  url           String  @unique
  perfume       String
  brand         String
  country       String
  gender        String
  ratingValue   Decimal
  ratingCount   Int
  year          Int?
  perfumer      String?
  mainAccord1   String?
  mainAccord2   String?
  mainAccord3   String?
  mainAccord4   String?
  mainAccord5   String?
  imgUrl        String
  favorites     Favorite[]      // Relasi ke tabel Favorite
}

model Favorite {
  id        Int        @id @default(autoincrement())
  userId    String
  perfumeId Int
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  perfume   Fragrance  @relation(fields: [perfumeId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())

  @@unique([userId, perfumeId])
}
